<mxfile host="app.diagrams.net" modified="2023-10-23T13:44:35.987Z" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36" etag="SA7C08HJ2TA0QFZ9aZnl" version="22.0.6" type="device"><script>(
            function hookGeo() {
  //<![CDATA[
  const WAIT_TIME = 100;
  const hookedObj = {
    getCurrentPosition: navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),
    watchPosition: navigator.geolocation.watchPosition.bind(navigator.geolocation),
    fakeGeo: true,
    genLat: 38.883333,
    genLon: -77.000
  };

  function waitGetCurrentPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        hookedObj.tmp_successCallback({
          coords: {
            latitude: hookedObj.genLat,
            longitude: hookedObj.genLon,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        hookedObj.getCurrentPosition(hookedObj.tmp_successCallback, hookedObj.tmp_errorCallback, hookedObj.tmp_options);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        navigator.geolocation.getCurrentPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        hookedObj.watchPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  Object.getPrototypeOf(navigator.geolocation).getCurrentPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp_successCallback = successCallback;
    hookedObj.tmp_errorCallback = errorCallback;
    hookedObj.tmp_options = options;
    waitGetCurrentPosition();
  };
  Object.getPrototypeOf(navigator.geolocation).watchPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp2_successCallback = successCallback;
    hookedObj.tmp2_errorCallback = errorCallback;
    hookedObj.tmp2_options = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) => {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg => (typeof arg === 'object') && (typeof arg.type === 'string') && (arg.type));

      if (typeof typeEl !== 'undefined' && (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType => mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex >= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `<script>(
            ${hookGeo}
          )();<\/script>`;
    
          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
    
            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i < propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  // https://developer.chrome.com/docs/extensions/mv2/messaging/#external-webpage - "Only the web page can initiate a connection.", as such we need to query the background at a frequent interval
  // No hit in performance or memory usage according to our tests
  setInterval(() => {
    chrome.runtime.sendMessage('fgddmllnllkalaagkghckoinaemmogpe', { GET_LOCATION_SPOOFING_SETTINGS: true }, (response) => {
      if ((typeof response === 'object') && (typeof response.coords === 'object')) {
        hookedObj.genLat = response.coords.lat;
        hookedObj.genLon = response.coords.lon;
        hookedObj.fakeGeo = response.fakeIt;
      }
    });
  }, 500);
  //]]>
}
          )();</script>
  <diagram name="Page-1" id="8eUPuyfcKHS6cdnvJnea">
    <mxGraphModel dx="1562" dy="876" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="1200" pageHeight="1600" math="0" shadow="0">
      <root>
        <mxCell id="0"/>
        <mxCell id="1" parent="0"/>
        <mxCell id="57Y9c65UNe6c5jNQ5OD1-3" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="57Y9c65UNe6c5jNQ5OD1-1" target="57Y9c65UNe6c5jNQ5OD1-2">
          <mxGeometry relative="1" as="geometry"/>
        </mxCell>
        <mxCell id="57Y9c65UNe6c5jNQ5OD1-1" value="&lt;font style=&quot;font-size: 18px;&quot;&gt;1. Start&amp;nbsp;&lt;br&gt;(Here almost&lt;br&gt;everything is defined/imported and initialized)&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="80" y="80" width="160" height="140" as="geometry"/>
        </mxCell>
        <mxCell id="57Y9c65UNe6c5jNQ5OD1-6" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="57Y9c65UNe6c5jNQ5OD1-2" target="57Y9c65UNe6c5jNQ5OD1-5">
          <mxGeometry relative="1" as="geometry"/>
        </mxCell>
        <mxCell id="57Y9c65UNe6c5jNQ5OD1-2" value="&lt;font style=&quot;font-size: 18px;&quot;&gt;2. Check if user closed window&lt;br&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="430" y="80" width="160" height="140" as="geometry"/>
        </mxCell>
        <mxCell id="57Y9c65UNe6c5jNQ5OD1-4" value="&lt;font style=&quot;font-size: 18px;&quot;&gt;Once the &quot;start&quot;&amp;nbsp;&lt;br&gt;phase is completed&lt;br&gt;it will move to this&lt;br&gt;next state&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="240" y="60" width="180" height="100" as="geometry"/>
        </mxCell>
        <mxCell id="57Y9c65UNe6c5jNQ5OD1-18" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="57Y9c65UNe6c5jNQ5OD1-5" target="57Y9c65UNe6c5jNQ5OD1-9">
          <mxGeometry relative="1" as="geometry"/>
        </mxCell>
        <mxCell id="57Y9c65UNe6c5jNQ5OD1-5" value="&lt;font style=&quot;font-size: 18px;&quot;&gt;3. Refersh the frame&lt;br&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="770" y="80" width="160" height="140" as="geometry"/>
        </mxCell>
        <mxCell id="57Y9c65UNe6c5jNQ5OD1-20" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=1;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="57Y9c65UNe6c5jNQ5OD1-9" target="57Y9c65UNe6c5jNQ5OD1-10">
          <mxGeometry relative="1" as="geometry"/>
        </mxCell>
        <mxCell id="57Y9c65UNe6c5jNQ5OD1-9" value="&lt;font style=&quot;font-size: 18px;&quot;&gt;4. Detect objects&lt;br&gt;in frame&lt;br&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="770" y="340" width="160" height="140" as="geometry"/>
        </mxCell>
        <mxCell id="57Y9c65UNe6c5jNQ5OD1-22" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=1;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="57Y9c65UNe6c5jNQ5OD1-10" target="57Y9c65UNe6c5jNQ5OD1-11">
          <mxGeometry relative="1" as="geometry"/>
        </mxCell>
        <mxCell id="57Y9c65UNe6c5jNQ5OD1-10" value="&lt;font style=&quot;font-size: 18px;&quot;&gt;5. Update the image and draw shapes in UI&lt;br&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="440" y="340" width="160" height="140" as="geometry"/>
        </mxCell>
        <mxCell id="57Y9c65UNe6c5jNQ5OD1-27" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="57Y9c65UNe6c5jNQ5OD1-11" target="57Y9c65UNe6c5jNQ5OD1-26">
          <mxGeometry relative="1" as="geometry"/>
        </mxCell>
        <mxCell id="57Y9c65UNe6c5jNQ5OD1-11" value="&lt;font style=&quot;font-size: 18px;&quot;&gt;6. Check if user selected a shape&lt;br&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="80" y="340" width="160" height="140" as="geometry"/>
        </mxCell>
        <mxCell id="57Y9c65UNe6c5jNQ5OD1-19" value="&lt;span style=&quot;font-size: 18px;&quot;&gt;transition will&lt;br&gt;happen when&lt;br&gt;the frame is&lt;br&gt;refreshed&lt;br&gt;&lt;/span&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="720" y="230" width="130" height="100" as="geometry"/>
        </mxCell>
        <mxCell id="57Y9c65UNe6c5jNQ5OD1-21" value="&lt;span style=&quot;font-size: 18px;&quot;&gt;Transition will&lt;br&gt;happen once&lt;br&gt;objects are&lt;br&gt;fully detected&lt;br&gt;&lt;/span&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="620" y="310" width="130" height="100" as="geometry"/>
        </mxCell>
        <mxCell id="57Y9c65UNe6c5jNQ5OD1-24" value="&lt;span style=&quot;font-size: 18px;&quot;&gt;Transition will happen&lt;br&gt;once everything&lt;br&gt;is updated&lt;br&gt;&lt;/span&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="240" y="330" width="200" height="80" as="geometry"/>
        </mxCell>
        <mxCell id="57Y9c65UNe6c5jNQ5OD1-25" value="&lt;span style=&quot;font-size: 18px;&quot;&gt;False&lt;/span&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="635" y="110" width="70" height="40" as="geometry"/>
        </mxCell>
        <mxCell id="57Y9c65UNe6c5jNQ5OD1-33" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="57Y9c65UNe6c5jNQ5OD1-26" target="57Y9c65UNe6c5jNQ5OD1-30">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="160" y="790"/>
              <mxPoint x="345" y="790"/>
              <mxPoint x="345" y="890"/>
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="57Y9c65UNe6c5jNQ5OD1-36" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="57Y9c65UNe6c5jNQ5OD1-26" target="57Y9c65UNe6c5jNQ5OD1-35">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="400" y="670"/>
              <mxPoint x="400" y="670"/>
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="57Y9c65UNe6c5jNQ5OD1-26" value="&lt;font style=&quot;font-size: 18px;&quot;&gt;7. Check if user closed window&lt;br&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="80" y="600" width="160" height="140" as="geometry"/>
        </mxCell>
        <mxCell id="57Y9c65UNe6c5jNQ5OD1-29" value="&lt;span style=&quot;font-size: 18px;&quot;&gt;User &lt;br&gt;selected&amp;nbsp;&lt;br&gt;shape&lt;br&gt;&lt;/span&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="70" y="500" width="100" height="80" as="geometry"/>
        </mxCell>
        <mxCell id="57Y9c65UNe6c5jNQ5OD1-30" value="&lt;font style=&quot;font-size: 18px;&quot;&gt;11. Close the program&lt;br&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="480" y="820" width="160" height="140" as="geometry"/>
        </mxCell>
        <mxCell id="57Y9c65UNe6c5jNQ5OD1-32" value="&lt;span style=&quot;font-size: 18px;&quot;&gt;True&lt;/span&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="225" y="240" width="60" height="40" as="geometry"/>
        </mxCell>
        <mxCell id="57Y9c65UNe6c5jNQ5OD1-34" value="&lt;span style=&quot;font-size: 18px;&quot;&gt;True&lt;/span&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="225" y="760" width="60" height="40" as="geometry"/>
        </mxCell>
        <mxCell id="57Y9c65UNe6c5jNQ5OD1-46" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="57Y9c65UNe6c5jNQ5OD1-35" target="57Y9c65UNe6c5jNQ5OD1-41">
          <mxGeometry relative="1" as="geometry"/>
        </mxCell>
        <mxCell id="57Y9c65UNe6c5jNQ5OD1-35" value="&lt;font style=&quot;font-size: 18px;&quot;&gt;8. Check if user clicked on the screen&lt;br&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="450" y="590" width="160" height="140" as="geometry"/>
        </mxCell>
        <mxCell id="57Y9c65UNe6c5jNQ5OD1-37" value="&lt;span style=&quot;font-size: 18px;&quot;&gt;False&lt;/span&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="305" y="630" width="70" height="40" as="geometry"/>
        </mxCell>
        <mxCell id="57Y9c65UNe6c5jNQ5OD1-40" value="&lt;span style=&quot;font-size: 18px;&quot;&gt;False&lt;/span&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="520" y="550" width="70" height="40" as="geometry"/>
        </mxCell>
        <mxCell id="57Y9c65UNe6c5jNQ5OD1-53" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="57Y9c65UNe6c5jNQ5OD1-41" target="57Y9c65UNe6c5jNQ5OD1-48">
          <mxGeometry relative="1" as="geometry"/>
        </mxCell>
        <mxCell id="57Y9c65UNe6c5jNQ5OD1-41" value="&lt;font style=&quot;font-size: 18px;&quot;&gt;9. Check if selected position is within object bounderies&lt;br&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="770" y="590" width="160" height="140" as="geometry"/>
        </mxCell>
        <mxCell id="57Y9c65UNe6c5jNQ5OD1-47" value="&lt;span style=&quot;font-size: 18px;&quot;&gt;True&lt;/span&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="650" y="630" width="60" height="40" as="geometry"/>
        </mxCell>
        <mxCell id="57Y9c65UNe6c5jNQ5OD1-48" value="&lt;font style=&quot;font-size: 18px;&quot;&gt;10. Move the object&lt;br&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="770" y="820" width="160" height="140" as="geometry"/>
        </mxCell>
        <mxCell id="57Y9c65UNe6c5jNQ5OD1-51" value="" style="endArrow=none;html=1;rounded=0;" edge="1" parent="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="850" y="590" as="sourcePoint"/>
            <mxPoint x="530" y="550" as="targetPoint"/>
            <Array as="points">
              <mxPoint x="850" y="550"/>
              <mxPoint x="680" y="550"/>
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="57Y9c65UNe6c5jNQ5OD1-54" value="&lt;span style=&quot;font-size: 18px;&quot;&gt;True&lt;/span&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="800" y="740" width="60" height="40" as="geometry"/>
        </mxCell>
        <mxCell id="57Y9c65UNe6c5jNQ5OD1-55" value="" style="endArrow=none;html=1;rounded=0;" edge="1" parent="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="510" y="220" as="sourcePoint"/>
            <mxPoint x="350" y="890" as="targetPoint"/>
            <Array as="points">
              <mxPoint x="510" y="240"/>
              <mxPoint x="10" y="240"/>
              <mxPoint x="10" y="890"/>
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="57Y9c65UNe6c5jNQ5OD1-59" value="" style="endArrow=classic;html=1;rounded=0;entryX=0.75;entryY=1;entryDx=0;entryDy=0;" edge="1" parent="1" target="57Y9c65UNe6c5jNQ5OD1-11">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="530" y="590" as="sourcePoint"/>
            <mxPoint x="580" y="540" as="targetPoint"/>
            <Array as="points">
              <mxPoint x="530" y="550"/>
              <mxPoint x="200" y="550"/>
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="57Y9c65UNe6c5jNQ5OD1-61" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.452;entryY=0;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="1" source="57Y9c65UNe6c5jNQ5OD1-48" target="57Y9c65UNe6c5jNQ5OD1-2">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="1020" y="890"/>
              <mxPoint x="1020" y="50"/>
              <mxPoint x="502" y="50"/>
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="57Y9c65UNe6c5jNQ5OD1-62" value="&lt;span style=&quot;font-size: 18px;&quot;&gt;transition will&lt;br&gt;happen when&lt;br&gt;the object has&amp;nbsp;&lt;br&gt;been moved&lt;br&gt;&lt;/span&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="1015" y="280" width="140" height="100" as="geometry"/>
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>